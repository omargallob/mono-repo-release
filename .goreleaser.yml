# GoReleaser configuration for mono-repo-release
# Documentation: https://goreleaser.com

version: 2

project_name: mono-repo-release

before:
  hooks:
    # Ensure dependencies are up to date
    - go mod tidy
    # Run tests before building
    - go test ./...

builds:
  # Main application
  - id: app
    main: ./cmd/app
    binary: mono-repo-app
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser

  # Lib1 CLI tool
  - id: lib1-cli
    main: ./pkg/lib1/cmd
    binary: lib1-cli
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}

  # Lib2 CLI tool
  - id: lib2-cli
    main: ./pkg/lib2/cmd
    binary: lib2-cli
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}

archives:
  - id: default
    formats: [tar.gz]
    files:
      - README.md
      - LICENSE*
      - CHANGELOG.md

checksum:
  name_template: "checksums.txt"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^chore:"
      - "^build:"
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Performance improvements"
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: Others
      order: 999

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .ProjectName }}"
  draft: false
  prerelease: auto
  mode: replace
  name_template: "{{.ProjectName}} v{{.Version}}"
  header: |
    ## What's new in {{ .ProjectName }} v{{ .Version }}

    Welcome to this new release!
  footer: |
    ## Docker Images

    Docker images are available at:
    - `ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Version }}`
    - `ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest`

    **Full Changelog**: https://git.i.mercedes-benz.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}/compare/{{ .PreviousTag }}...{{ .Tag }}
